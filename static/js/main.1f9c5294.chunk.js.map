{"version":3,"sources":["component/Card.js","component/TinderCards.js","component/Button.js","component/Phone.js","component/App.js","index.js"],"names":["Card","props","nickname","age","url","detail","react_default","a","createElement","className","type","style","backgroundImage","concat","job","favorite","TinderCards","_ref","people","swipeDirection","TransitionGroup","component","map","person","CSSTransition","key","uuidv4","timeout","classNames","react_tinder_card_default","preventSwipe","Button","handleDelete","IconButton","onClick","Close_default","fontSize","Favorite_default","Phone","_useState","useState","_useState2","Object","slicedToArray","setSwipeDirection","_useState3","_useState4","setPeople","useEffect","createApi","accessKey","search","getPhotos","query","page","perPage","then","json","response","results","forEach","picture","index","newPerson","objectSpread","profiles","urls","full","direction","length","newPeople","filter","setTimeout","App","document","title","ReactDOM","render","StrictMode","component_App","getElementById"],"mappings":"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","file":"static/js/main.1f9c5294.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Card(props) {\n\tconst { nickname, age, url, detail } = props;\n\treturn (\n\t\t<div className='card__container'>\n\t\t\t<div className='card__triangle' />\n\t\t\t<input type='checkbox' className='toggler' />\n\t\t\t<div className='card'>\n\t\t\t\t<div className='card__front' style={{ backgroundImage: `url(${url})` }}>\n\t\t\t\t\t<h2 className='card__name-age'>\n\t\t\t\t\t\t{nickname}, {age}\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className='card__back'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\tNickname: <b>{nickname}</b>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\tAge: <b>{age}</b>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\tJob: <b>{detail.job}</b>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<dl>\n\t\t\t\t\t\t\t<dt>Favorite:</dt>\n\t\t\t\t\t\t\t<dd>\n\t\t\t\t\t\t\t\t- <b>{detail.favorite[0]}</b>\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t<dd>\n\t\t\t\t\t\t\t\t- <b>{detail.favorite[1]}</b>\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t</dl>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Card from './Card';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n// This is for swiping card\nimport TinderCard from 'react-tinder-card';\n\nexport default function TinderCards({ people, swipeDirection }) {\n\treturn (\n\t\t<div className='tinderCards__container'>\n\t\t\t<h1 className='tinderCards__empty'>Empty</h1>\n\t\t\t<TransitionGroup component={null}>\n\t\t\t\t{people.map((person) => (\n\t\t\t\t\t<CSSTransition\n\t\t\t\t\t\tkey={uuidv4()}\n\t\t\t\t\t\ttimeout={500}\n\t\t\t\t\t\tclassNames={swipeDirection}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TinderCard\n\t\t\t\t\t\t\tclassName='tinderCards__swipe'\n\t\t\t\t\t\t\tkey={uuidv4()}\n\t\t\t\t\t\t\tpreventSwipe={['up', 'down']}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Card {...person} />\n\t\t\t\t\t\t</TinderCard>\n\t\t\t\t\t</CSSTransition>\n\t\t\t\t))}\n\t\t\t</TransitionGroup>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport default function Button({ handleDelete }) {\n\treturn (\n\t\t<div className='button'>\n\t\t\t<IconButton\n\t\t\t\tclassName='button__dislike'\n\t\t\t\tonClick={() => handleDelete('left')}\n\t\t\t>\n\t\t\t\t<CloseIcon fontSize='large' />\n\t\t\t</IconButton>\n\t\t\t<IconButton\n\t\t\t\tclassName='button__like'\n\t\t\t\tonClick={() => handleDelete('right')}\n\t\t\t>\n\t\t\t\t<FavoriteIcon fontSize='large' />\n\t\t\t</IconButton>\n\t\t</div>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport { createApi } from 'unsplash-js';\nimport TinderCards from './TinderCards';\nimport Button from './Button';\n\nexport default function Phone() {\n\t// This keeps track of swipe direction.\n\tconst [swipeDirection, setSwipeDirection] = useState('');\n\t// This data will be passed to <TinderCards> Component.\n\tconst [people, setPeople] = useState([]);\n\n\tuseEffect(() => {\n\t\t// This is Unsplash API\n\t\tconst unsplashApi = createApi({\n\t\t\taccessKey: 'CovFXJWllTRU9LHciop-hMChGiX7EcScwrXQtRI9GjY',\n\t\t});\n\t\tunsplashApi.search\n\t\t\t.getPhotos({\n\t\t\t\tquery: 'woman',\n\t\t\t\tpage: 1,\n\t\t\t\tperPage: 4,\n\t\t\t})\n\t\t\t.then((json) => {\n\t\t\t\t// json.response.results is JSON received from API\n\t\t\t\tjson.response.results.forEach((picture, index) => {\n\t\t\t\t\tconst newPerson = {\n\t\t\t\t\t\t...profiles[index],\n\t\t\t\t\t\turl: picture.urls.full,\n\t\t\t\t\t};\n\t\t\t\t\tprofiles[index] = newPerson;\n\t\t\t\t});\n\t\t\t\tsetPeople(profiles);\n\t\t\t});\n\t}, []);\n\n\tfunction handleDelete(direction) {\n\t\t// If no more cards in people, then do nothing.\n\t\tif (people.length !== 0) {\n\t\t\t// If direction is not same, update swipe direction and rerender DOM then className of CSSTransition in TinderCards.js will be updated so that card will be swiped based on user input.\n\t\t\tsetSwipeDirection(direction);\n\t\t\t// Remove the top of card.\n\t\t\tconst newPeople = people.filter(\n\t\t\t\t(person, index) => index !== people.length - 1\n\t\t\t);\n\t\t\t// Give React some time to rerender DOM to update className of CSSTransition. Otherwise, card won't be swiped correct direction.\n\t\t\t// The reason why I reset swipeDirection is that if swipeDirection function is changed left to right in above setSwipeDirection(), then React will rerender the TinderCards component which means the component will be unmounted. Therefore, it will trigger exit animations. If you set swipeDirection to anything except left and right will prevent it to be happened because there is no such a className animation in TinderCards.css.\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetPeople(newPeople);\n\t\t\t\tsetSwipeDirection('');\n\t\t\t}, 500);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='phone'>\n\t\t\t<TinderCards swipeDirection={swipeDirection} people={people} />\n\t\t\t<Button handleDelete={handleDelete} />\n\t\t</div>\n\t);\n}\n\nconst profiles = [\n\t{\n\t\tnickname: 'Sara',\n\t\tage: 18,\n\t\turl: '',\n\t\tdetail: {\n\t\t\tjob: 'software engineer👩‍💻',\n\t\t\tfavorite: ['Banana🍌', 'Soccor⚽'],\n\t\t},\n\t},\n\t{\n\t\tnickname: 'Yui',\n\t\tage: 29,\n\t\turl: '',\n\t\tdetail: {\n\t\t\tjob: 'doctor 👩‍⚕ ️',\n\t\t\tfavorite: ['Watermelon 🍉', 'Basketball 🏀'],\n\t\t},\n\t},\n\t{\n\t\tnickname: 'Vennesa',\n\t\tage: 20,\n\t\turl: '',\n\t\tdetail: {\n\t\t\tjob: 'Investor 💰',\n\t\t\tfavorite: ['Avocado 🥑', 'Surfing 🏄‍♀️'],\n\t\t},\n\t},\n\t{\n\t\tnickname: 'Karen',\n\t\tage: 24,\n\t\turl: '',\n\t\tdetail: {\n\t\t\tjob: 'Model 👡',\n\t\t\tfavorite: ['Grapes 🍇', 'Climbing‍ 🧗‍️️'],\n\t\t},\n\t},\n];\n","import React, { useEffect } from 'react';\nimport Phone from './Phone';\nimport '../css/app.css';\n\nfunction App() {\n\tuseEffect(() => {\n\t\tdocument.title = 'Tinder UI';\n\t}, []);\n\treturn <Phone />;\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}